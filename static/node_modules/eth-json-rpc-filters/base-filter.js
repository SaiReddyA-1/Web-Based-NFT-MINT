var _regeneratorRuntime = require("C:\\Users\\GridComputers\\Downloads\\111\\111\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/regenerator");

var _asyncToGenerator = require("C:\\Users\\GridComputers\\Downloads\\111\\111\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/asyncToGenerator");

var _classCallCheck = require("C:\\Users\\GridComputers\\Downloads\\111\\111\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/classCallCheck");

var _createClass = require("C:\\Users\\GridComputers\\Downloads\\111\\111\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/createClass");

var _inherits = require("C:\\Users\\GridComputers\\Downloads\\111\\111\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/inherits");

var _possibleConstructorReturn = require("C:\\Users\\GridComputers\\Downloads\\111\\111\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/possibleConstructorReturn");

var _getPrototypeOf = require("C:\\Users\\GridComputers\\Downloads\\111\\111\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/getPrototypeOf");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var SafeEventEmitter = require('@metamask/safe-event-emitter').default;

var BaseFilter = /*#__PURE__*/function (_SafeEventEmitter) {
  "use strict";

  _inherits(BaseFilter, _SafeEventEmitter);

  var _super = _createSuper(BaseFilter);

  function BaseFilter() {
    var _this;

    _classCallCheck(this, BaseFilter);

    _this = _super.call(this);
    _this.updates = [];
    return _this;
  }

  _createClass(BaseFilter, [{
    key: "initialize",
    value: function () {
      var _initialize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function initialize() {
        return _initialize.apply(this, arguments);
      }

      return initialize;
    }()
  }, {
    key: "update",
    value: function () {
      var _update = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                throw new Error('BaseFilter - no update method specified');

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function update() {
        return _update.apply(this, arguments);
      }

      return update;
    }()
  }, {
    key: "addResults",
    value: function addResults(newResults) {
      var _this2 = this;

      this.updates = this.updates.concat(newResults);
      newResults.forEach(function (result) {
        return _this2.emit('update', result);
      });
    }
  }, {
    key: "addInitialResults",
    value: function addInitialResults(newResults) {}
  }, {
    key: "getChangesAndClear",
    value: function getChangesAndClear() {
      var updates = this.updates;
      this.updates = [];
      return updates;
    }
  }]);

  return BaseFilter;
}(SafeEventEmitter);

module.exports = BaseFilter;