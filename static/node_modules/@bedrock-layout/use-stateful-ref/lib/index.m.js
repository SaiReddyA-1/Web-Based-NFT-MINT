import _slicedToArray from "C:\\Users\\GridComputers\\Downloads\\111\\111\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/esm/slicedToArray";
import React from "react";

function useStatefulRef() {
  var initialVal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

  var _React$useState = React.useState(initialVal),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      cur = _React$useState2[0],
      setCur = _React$useState2[1];

  var _React$useRef = React.useRef({
    current: cur
  }),
      ref = _React$useRef.current;

  Object.defineProperty(ref, "current", {
    get: function get() {
      return cur;
    },
    set: function set(value) {
      if (!Object.is(cur, value)) {
        cur = value;
        setCur(value);
      }
    }
  });
  return ref;
}

export { useStatefulRef as default };