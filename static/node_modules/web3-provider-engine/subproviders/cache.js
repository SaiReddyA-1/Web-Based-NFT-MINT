var _createClass = require("C:\\Users\\GridComputers\\Downloads\\111\\111\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/createClass");

var _classCallCheck = require("C:\\Users\\GridComputers\\Downloads\\111\\111\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/classCallCheck");

var _inherits = require("C:\\Users\\GridComputers\\Downloads\\111\\111\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/inherits");

var _possibleConstructorReturn = require("C:\\Users\\GridComputers\\Downloads\\111\\111\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/possibleConstructorReturn");

var _getPrototypeOf = require("C:\\Users\\GridComputers\\Downloads\\111\\111\\node_modules\\babel-preset-react-app\\node_modules\\@babel\\runtime/helpers/getPrototypeOf");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var ProviderSubprovider = require('./json-rpc-engine-middleware');

var createBlockCacheMiddleware = require('eth-json-rpc-middleware/block-cache');

var BlockCacheSubprovider = /*#__PURE__*/function (_ProviderSubprovider) {
  "use strict";

  _inherits(BlockCacheSubprovider, _ProviderSubprovider);

  var _super = _createSuper(BlockCacheSubprovider);

  function BlockCacheSubprovider(opts) {
    _classCallCheck(this, BlockCacheSubprovider);

    return _super.call(this, function (_ref) {
      var blockTracker = _ref.blockTracker;
      return createBlockCacheMiddleware(Object.assign({
        blockTracker: blockTracker
      }, opts));
    });
  }

  return _createClass(BlockCacheSubprovider);
}(ProviderSubprovider);

module.exports = BlockCacheSubprovider;